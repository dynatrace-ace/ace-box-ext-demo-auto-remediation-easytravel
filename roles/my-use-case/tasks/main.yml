---
- include_role:
    name: "microk8s"

- include_role:
    name: "dt-oneagent-classic"

- include_role:
    name: "app-easytravel-classic"

- include_role:
    name: app-easytravel-classic
    tasks_from: deploy-ingress

- set_fact:
    monaco_projects_folder: "{{ role_path }}/files/monaco/projects"

- name: Auto Remediation - Apply Monitoring as Code
  include_role:
    name: monaco
    tasks_from: apply-monaco
    apply:
      environment:
        SNOW_INSTANCE: "{{ servicenow_instance_id }}"
        SNOW_USER: "{{ servicenow_instance_user }}"
        SNOW_PASSWORD: "{{ servicenow_instance_password}}"
  vars:
    monaco_project: "easytravel"
    monaco_projects_root: "{{ monaco_projects_folder }}" 

# - include_role:
#     name: "app-easytravel-classic"
#     tasks_from: apply-monaco

- include_role:
    name: gitea

- include_role:
    name: gitea
    tasks_from: source-secret
  when: gitea_access_token is not defined or gitea_username is not defined or gitea_password is not defined

- include_role:
    name: gitea
    tasks_from: create-organization
  vars:
    gitea_org: "{{ demo_auto_remediation_org }}"

- include_role:
    name: gitea
    tasks_from: create-repository
  vars:
    gitea_org: "{{ demo_auto_remediation_org }}"
    gitea_repo: "{{ demo_auto_remediation_repo_name }}"

- include_role:
    name: repository
  vars:
    repo_src: "{{ item.repo_src }}"
    git_org: "{{ item.git_org }}"
    git_repo: "{{ item.repo_target }}"
    git_username: "{{ gitea_username }}"
    git_password: "{{ gitea_password }}"
    git_domain: "{{ gitea_domain }}"
    git_remote: "gitea"
  loop:
  - { repo_target: "{{ demo_auto_remediation_repo_name }}", repo_src: "{{ role_path }}/files/repos/autoremediation-demo", git_org: "{{ demo_auto_remediation_org }}" }
  when: new_repo_created is defined and new_repo_created == true

- include_role:
    name: awx-cust
    tasks_from: create-secrets

- include_role:
    name: "awx-cust"

- include_tasks:
    file: create-user.yml

- include_tasks:
    file: configure-awx.yml

- include_role:
    name: app-easytravel-classic
    tasks_from: source-endpoints
# Include use case specific Dahboard values
- set_fact:
    include_dashboard_value_file: "{{ role_path }}/templates/auto-remediation-dashboard.yml.j2"

- include_role:
    name: dashboard
    tasks_from: template-values-file

- include_role:
    name: dashboard